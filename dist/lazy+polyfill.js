(function(c,q,r){function e(a,f,c){a&&"string"!=typeof a&&(a instanceof Array||a.selector)||(a=[a]);var b=a[0]||a.selector||"[data-src]";var d=a[1]||a.threshold||a.observer;a=a[2]||a.rootMargin;var h;d="object"==typeof d?d:{rootMargin:a||"0px",threshold:d||0};if(f instanceof Array){var e=f[2];var l=f[1];f=f[0];l=l||f}f=f||function(a,b,c){c=a.getAttribute("data-srcset");b=a.getAttribute("data-src");c&&(a.srcset=c);b&&(a.src=b);e&&e(a)};c=c||function(a){for(var b,c,d=0,e=a.length;d<e;d++)if(b=a[d],
(c=!g||b.isIntersecting)||l)b=g?b.target:b,c=(c?f:l)(b,g,c),g&&!1!==c&&g.unobserve(b)};"string"==typeof b?h=q.querySelectorAll(b):h=b&&b.length==r?[b]:b;if(-1===f)return h;var g=k?new k(c,d):!1;d=0;for(b=h.length;d<b;d++)a=h[d],g?g.observe(a):c([a]);return h}function t(a){n.push([].slice.call(arguments));return p(a,-1)}var k,m="IntersectionObserverEntry"in c?c.IntersectionObserverEntry.prototype:0;m&&"intersectionRatio"in m&&"isIntersecting"in m&&(k=c.IntersectionObserver);c.$lazy=e;var n=[];if(!k){if(c.$lazypoly)var b=
c.$lazypoly;if(b){var p=e;c.$lazy=e=t;"function"==typeof b&&(b=b());("string"!=typeof b&&"then"in b?b:$async.js(b)).then(function(){k=c.IntersectionObserver;c.$lazy=e=p;for(var a;a=n.shift();)e.apply(null,a)})}}})(window,document);
