(function(c,q,r){function g(a,f,c){a&&"string"!=typeof a&&(a instanceof Array||a.selector)||(a=[a]);var d=a[0]||a.selector||"[data-src]",e=a[1]||a.threshold||a.observer;a=a[2]||a.rootMargin;var b;e="object"==typeof e?e:{rootMargin:a||"0px",threshold:e||0};if(f instanceof Array){var g=f[2];var l=f[1];f=f[0];l=l||f}f=f||function(a,b,c){c=a.getAttribute("data-srcset");b=a.getAttribute("data-src");c&&(a.srcset=c);b&&(a.src=b);g&&g(a)};c=c||function(a){for(var b,c,d=0,e=a.length;d<e;d++)if(b=a[d],(c=!h||
b.isIntersecting)||l)b=h?b.target:b,c=(c?f:l)(b,h,c),h&&!1!==c&&h.unobserve(b)};"string"==typeof d?b=q.querySelectorAll(d):b=d&&d.length==r?[d]:d;if(-1===f)return b;var h=k?new k(c,e):!1;e=0;for(a=b.length;e<a;e++)d=b[e],h?h.observe(d):c([d]);return b}function t(a){n.push([].slice.call(arguments));return p(a,-1)}var k,m="IntersectionObserverEntry"in c?c.IntersectionObserverEntry.prototype:0;m&&"intersectionRatio"in m&&"isIntersecting"in m&&(k=c.IntersectionObserver);c.$lazy=g;var n=[];if(!k){if(c.$lazypoly)var b=
c.$lazypoly;if(b){var p=g;c.$lazy=g=t;"function"==typeof b&&(b=b());("string"!=typeof b&&"then"in b?b:$async.js(b)).then(function(){k=c.IntersectionObserver;c.$lazy=g=p;for(var a;a=n.shift();)g.apply(null,a)})}}})(window,document);
