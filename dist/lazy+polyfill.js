(function(b,r,t){function d(c,e,b){c&&"string"!=typeof c&&(c instanceof Array||c.selector)||(c=[c]);var a=c[0]||c.selector||"[data-src]";var f=c[1]||c.threshold||c.observer;c=c[2]||c.rootMargin;var h;f="object"==typeof f?f:{rootMargin:c||"0px",threshold:f||0};if(e instanceof Array){var d=e[2];var m=e[1];e=e[0];m=m||e}if(1===e){e=!1;var k=!0}e=e||function(c,a,b){b=c.getAttribute("data-srcset");a=c.getAttribute("data-src");b&&(c.srcset=b);a&&(c.src=a);d&&d(c)};b=b||function(c){for(var a,b,d=0,f=c.length;d<
f;d++)if(a=c[d],(b=!g||a.isIntersecting)||m)a=g?a.target:a,b=(b?e:m)(a,g,b),g&&!1!==b&&g.unobserve(a)};"string"==typeof a?h=r.querySelectorAll(a):h=a&&a.length==t?[a]:a;if(-1===e)return h;var g=l&&!k?new l(b,f):!1;k=0;for(a=h.length;k<a;k++)f=h[k],g?g.observe(f):b([f]);return h}function u(a){p.push([].slice.call(arguments));return q(a,-1)}var l,n="IntersectionObserverEntry"in b?b.IntersectionObserverEntry.prototype:0;n&&"intersectionRatio"in n&&"isIntersecting"in n&&(l=b.IntersectionObserver);b.$lazy=
d;var p=[];if(!l){if(b.$lazypoly)var a=b.$lazypoly;if(a){var q=d;b.$lazy=d=u;"function"==typeof a&&(a=a());("string"!=typeof a&&"then"in a?a:$async.js(a)).then(function(){l=b.IntersectionObserver;b.$lazy=d=q;for(var a;a=p.shift();)d.apply(null,a)})}}})(window,document);
